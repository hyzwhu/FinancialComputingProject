package com.group.financialcomputing;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import javax.swing.*;
import javax.swing.filechooser.FileSystemView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author yongzhaohuang
 */
public class FileResourceWindow extends JFrame implements ActionListener {

	public FileResourceWindow() {
		initComponents();
	}

	public FileResourceWindow(MainWindow mainWindow) {
		this.mainWindow = mainWindow;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	private void initComponents() {

		this.setTitle("FinancialComputing");
		jLabel1 = new JLabel();
		jTextField1 = new JTextField();
		jButton1 = new JButton();
		jButton2 = new JButton();
		jButton3 = new JButton();

		jLabel1.setText("Please check the file directory");

		jTextField1.setText("");

		jButton1.setText("Browse");
		jButton1.addActionListener(this);

		jButton2.setText("Exit");
		jButton2.addActionListener(this);

		jButton3.setText("Next");
		jButton3.addActionListener(this);




		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(24, 24, 24)
								.addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
										.addGroup(layout.createSequentialGroup()
												.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 188, GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18)
												.addComponent(jButton1))
										.addComponent(jLabel1)
										.addGroup(layout.createSequentialGroup()
												.addGap(138, 138, 138)
												.addComponent(jButton2)
												.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(jButton3)))
								.addContainerGap(35, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGap(41, 41, 41)
								.addComponent(jLabel1)
								.addGap(31, 31, 31)
								.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
										.addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
										.addComponent(jButton1))
								.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
								.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
										.addComponent(jButton2)
										.addComponent(jButton3))
								.addGap(27, 27, 27))
		);

		pack();
	}

	// Variables declaration - do not modify
	private MainWindow mainWindow;
	private JButton jButton1;
	private JButton jButton2;
	private JButton jButton3;
	private JLabel jLabel1;
	private JTextField jTextField1;
	private HashMap<String, List<OneDayStock>> allStock = new HashMap<>();
	public HashMap<String, List<OneDayStock>> getAllStock() {
		return allStock;
	}
	public void setAllStock(HashMap<String, List<OneDayStock>> allStock) {
		this.allStock = allStock;
	}

	@Override
	public void actionPerformed(ActionEvent actionEvent) {
		if (actionEvent.getActionCommand().equals("Browse")){
			JFileChooser jf = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory()){

			};
			jf.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
			jf.showOpenDialog(this);
			File f = jf.getSelectedFile();
			String s = f.getAbsolutePath();
			this.jTextField1.setText(s);

			try {
				allStock = new Reader().readFiles(s);
				mainWindow.setAbsPath(s);
			} catch (IOException e) {
				e.printStackTrace();
			}

		}
		else if (actionEvent.getActionCommand().equals("Next")){
			this.mainWindow.setAllStock(allStock);
			this.dispose();
		}
		else if (actionEvent.getActionCommand().equals("Exit")){
			this.dispose();
		}
	}
}
